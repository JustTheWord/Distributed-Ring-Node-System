// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: pkg/ringnode/ringnode.proto

package ringnode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NeighborInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Ip     string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port   int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *NeighborInfo) Reset() {
	*x = NeighborInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NeighborInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeighborInfo) ProtoMessage() {}

func (x *NeighborInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeighborInfo.ProtoReflect.Descriptor instead.
func (*NeighborInfo) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{0}
}

func (x *NeighborInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NeighborInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NeighborInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// For Chandyâ€“Lamport
type MarkerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId  string `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	InitiatorId string `protobuf:"bytes,2,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
}

func (x *MarkerMessage) Reset() {
	*x = MarkerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkerMessage) ProtoMessage() {}

func (x *MarkerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkerMessage.ProtoReflect.Descriptor instead.
func (*MarkerMessage) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{2}
}

func (x *MarkerMessage) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *MarkerMessage) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

type RecordedState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId       string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SnapshotId   string `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	LocalState   string `protobuf:"bytes,3,opt,name=local_state,json=localState,proto3" json:"local_state,omitempty"`
	ChannelState string `protobuf:"bytes,4,opt,name=channel_state,json=channelState,proto3" json:"channel_state,omitempty"`
}

func (x *RecordedState) Reset() {
	*x = RecordedState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordedState) ProtoMessage() {}

func (x *RecordedState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordedState.ProtoReflect.Descriptor instead.
func (*RecordedState) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{3}
}

func (x *RecordedState) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RecordedState) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *RecordedState) GetLocalState() string {
	if x != nil {
		return x.LocalState
	}
	return ""
}

func (x *RecordedState) GetChannelState() string {
	if x != nil {
		return x.ChannelState
	}
	return ""
}

// For sending application data around
type DataMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNodeId string `protobuf:"bytes,1,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	SnapshotId string `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	Payload    string `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DataMessage) Reset() {
	*x = DataMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMessage) ProtoMessage() {}

func (x *DataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMessage.ProtoReflect.Descriptor instead.
func (*DataMessage) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{4}
}

func (x *DataMessage) GetFromNodeId() string {
	if x != nil {
		return x.FromNodeId
	}
	return ""
}

func (x *DataMessage) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *DataMessage) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

// For mutual exclusion
type MutualExclusionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *MutualExclusionRequest) Reset() {
	*x = MutualExclusionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualExclusionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualExclusionRequest) ProtoMessage() {}

func (x *MutualExclusionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualExclusionRequest.ProtoReflect.Descriptor instead.
func (*MutualExclusionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{5}
}

func (x *MutualExclusionRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type MutualExclusionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Granted bool   `protobuf:"varint,1,opt,name=granted,proto3" json:"granted,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MutualExclusionResponse) Reset() {
	*x = MutualExclusionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualExclusionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualExclusionResponse) ProtoMessage() {}

func (x *MutualExclusionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualExclusionResponse.ProtoReflect.Descriptor instead.
func (*MutualExclusionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{6}
}

func (x *MutualExclusionResponse) GetGranted() bool {
	if x != nil {
		return x.Granted
	}
	return false
}

func (x *MutualExclusionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MutualExclusionRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *MutualExclusionRelease) Reset() {
	*x = MutualExclusionRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_ringnode_ringnode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualExclusionRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualExclusionRelease) ProtoMessage() {}

func (x *MutualExclusionRelease) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ringnode_ringnode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualExclusionRelease.ProtoReflect.Descriptor instead.
func (*MutualExclusionRelease) Descriptor() ([]byte, []int) {
	return file_pkg_ringnode_ringnode_proto_rawDescGZIP(), []int{7}
}

func (x *MutualExclusionRelease) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

var File_pkg_ringnode_ringnode_proto protoreflect.FileDescriptor

var file_pkg_ringnode_ringnode_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x72,
	0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72,
	0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x0c, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x39, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x53, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x6a, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x31, 0x0a, 0x16, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x16, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x32, 0xbd, 0x03, 0x0a, 0x08, 0x52, 0x69, 0x6e, 0x67,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x0f, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x0d, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x3a,
	0x0a, 0x11, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x72, 0x69,
	0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x0d, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x6b,
	0x12, 0x3b, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x0d,
	0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x30, 0x0a,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x72, 0x69, 0x6e, 0x67,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0d, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x12,
	0x54, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x20, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x75, 0x74, 0x75,
	0x61, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x75,
	0x74, 0x75, 0x61, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x0d, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_ringnode_ringnode_proto_rawDescOnce sync.Once
	file_pkg_ringnode_ringnode_proto_rawDescData = file_pkg_ringnode_ringnode_proto_rawDesc
)

func file_pkg_ringnode_ringnode_proto_rawDescGZIP() []byte {
	file_pkg_ringnode_ringnode_proto_rawDescOnce.Do(func() {
		file_pkg_ringnode_ringnode_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_ringnode_ringnode_proto_rawDescData)
	})
	return file_pkg_ringnode_ringnode_proto_rawDescData
}

var file_pkg_ringnode_ringnode_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_ringnode_ringnode_proto_goTypes = []interface{}{
	(*NeighborInfo)(nil),            // 0: ringnode.NeighborInfo
	(*Ack)(nil),                     // 1: ringnode.Ack
	(*MarkerMessage)(nil),           // 2: ringnode.MarkerMessage
	(*RecordedState)(nil),           // 3: ringnode.RecordedState
	(*DataMessage)(nil),             // 4: ringnode.DataMessage
	(*MutualExclusionRequest)(nil),  // 5: ringnode.MutualExclusionRequest
	(*MutualExclusionResponse)(nil), // 6: ringnode.MutualExclusionResponse
	(*MutualExclusionRelease)(nil),  // 7: ringnode.MutualExclusionRelease
}
var file_pkg_ringnode_ringnode_proto_depIdxs = []int32{
	0, // 0: ringnode.RingNode.InformSuccessor:input_type -> ringnode.NeighborInfo
	0, // 1: ringnode.RingNode.InformPredecessor:input_type -> ringnode.NeighborInfo
	2, // 2: ringnode.RingNode.SendMarker:input_type -> ringnode.MarkerMessage
	3, // 3: ringnode.RingNode.SendRecordedState:input_type -> ringnode.RecordedState
	4, // 4: ringnode.RingNode.SendData:input_type -> ringnode.DataMessage
	5, // 5: ringnode.RingNode.RequestAccess:input_type -> ringnode.MutualExclusionRequest
	7, // 6: ringnode.RingNode.ReleaseAccess:input_type -> ringnode.MutualExclusionRelease
	1, // 7: ringnode.RingNode.InformSuccessor:output_type -> ringnode.Ack
	1, // 8: ringnode.RingNode.InformPredecessor:output_type -> ringnode.Ack
	1, // 9: ringnode.RingNode.SendMarker:output_type -> ringnode.Ack
	1, // 10: ringnode.RingNode.SendRecordedState:output_type -> ringnode.Ack
	1, // 11: ringnode.RingNode.SendData:output_type -> ringnode.Ack
	6, // 12: ringnode.RingNode.RequestAccess:output_type -> ringnode.MutualExclusionResponse
	1, // 13: ringnode.RingNode.ReleaseAccess:output_type -> ringnode.Ack
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_ringnode_ringnode_proto_init() }
func file_pkg_ringnode_ringnode_proto_init() {
	if File_pkg_ringnode_ringnode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_ringnode_ringnode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NeighborInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_ringnode_ringnode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_ringnode_ringnode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_ringnode_ringnode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordedState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_ringnode_ringnode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_ringnode_ringnode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualExclusionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_ringnode_ringnode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualExclusionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_ringnode_ringnode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualExclusionRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_ringnode_ringnode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_ringnode_ringnode_proto_goTypes,
		DependencyIndexes: file_pkg_ringnode_ringnode_proto_depIdxs,
		MessageInfos:      file_pkg_ringnode_ringnode_proto_msgTypes,
	}.Build()
	File_pkg_ringnode_ringnode_proto = out.File
	file_pkg_ringnode_ringnode_proto_rawDesc = nil
	file_pkg_ringnode_ringnode_proto_goTypes = nil
	file_pkg_ringnode_ringnode_proto_depIdxs = nil
}
